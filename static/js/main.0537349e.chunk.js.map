{"version":3,"sources":["components/EducationForm.tsx","components/Education.tsx","components/EducationList.tsx","components/ExperienceForm.tsx","components/Experience.tsx","components/ExperienceList.tsx","components/PersonalData.tsx","components/ResumeContainer.tsx","App.tsx","index.tsx"],"names":["EducationForm","props","useState","edit","id","uuid","university","city","degree","subject","year","input","setInput","handleChange","e","newValue","target","name","value","className","onSubmit","preventDefault","htmlFor","type","onChange","initialState","Education","setEdit","updateEducation","educationList","map","education","onClick","deleteEducation","currentValue","handleEdit","EducationList","visibility","setVisibility","setEducationList","handleSubmit","filter","x","handleDelete","update","updatedEducation","handleUpdate","ExperienceForm","position","company","start","end","Experience","updateExperience","expList","job","deleteExperience","ExperienceList","setExpList","exp","updatedValue","PersonalData","surname","email","phone","info","setInfo","editMode","setEditMode","ResumeContainer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0537349e.chunk.js","sourcesContent":["import React, { FC, useState } from 'react';\nimport { Studies } from './types';\n\nimport { v4 as uuid } from 'uuid';\n\nconst EducationForm: FC<Prop> = (props) => {\n  const [input, setInput] = useState<Studies>(\n    props.edit\n      ? props.edit\n      : {\n          id: uuid(),\n          university: '',\n          city: '',\n          degree: '',\n          subject: '',\n          year: '',\n        }\n  );\n\n  const handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void = (\n    e\n  ) => {\n    const newValue = { ...input, [e.target.name]: e.target.value };\n    setInput(newValue);\n  };\n\n  const handleSubmit: (event: React.FormEvent<HTMLFormElement>) => void = (\n    e\n  ) => {\n    e.preventDefault();\n    props.onSubmit(input);\n  };\n\n  return (\n    <div className=\"form-container\">\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"university\">University</label>\n        <input\n          type=\"text\"\n          name=\"university\"\n          value={input.university}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"city\">City</label>\n        <input\n          type=\"text\"\n          name=\"city\"\n          value={input.city}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"degree\">Degree</label>\n        <input\n          type=\"text\"\n          name=\"degree\"\n          value={input.degree}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"Subject\">Subject</label>\n        <input\n          type=\"text\"\n          name=\"subject\"\n          value={input.subject}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"year\">Year</label>\n        <input\n          type=\"date\"\n          name=\"year\"\n          value={input.year}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">{props.edit ? 'Update' : 'Submit'}</button>\n      </form>\n    </div>\n  );\n};\n\ninterface Prop {\n  onSubmit: (input: Studies) => void;\n  edit?: Studies;\n}\n\nexport default EducationForm;\n","import React, { FC, useState } from 'react';\nimport { Studies } from './types';\nimport { MdModeEdit, MdDelete } from 'react-icons/md';\n\nimport EducationForm from './EducationForm';\n\nconst Education: FC<Prop> = (props) => {\n  const [edit, setEdit] = useState<Studies>(initialState);\n\n  const handleDelete = (id: string) => {\n    props.deleteEducation(id);\n  };\n\n  const handleUpdate = (input: Studies) => {\n    props.updateEducation(input);\n    setEdit(initialState);\n  };\n\n  const handleEdit = (education: Studies) => {\n    const currentValue = {\n      id: education.id,\n      university: education.university,\n      city: education.city,\n      degree: education.degree,\n      subject: education.subject,\n      year: education.year,\n    };\n\n    setEdit(currentValue);\n  };\n\n  if (edit.id) {\n    return <EducationForm edit={edit} onSubmit={handleUpdate} />;\n  }\n  return (\n    <div>\n      {props.educationList.map((education) => (\n        <div key={education.id} className=\"education-container\">\n          <h4>{education.degree}</h4>\n          <h4>{education.subject}</h4>\n          <h5>{education.university}</h5>\n          <h5>{education.city}</h5>\n          <h5>{education.year}</h5>\n          <button id=\"button\" onClick={() => handleDelete(education.id)}>\n            <MdDelete />\n          </button>\n          <button id=\"button\" onClick={() => handleEdit(education)}>\n            <MdModeEdit />\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst initialState = {\n  id: '',\n  university: '',\n  city: '',\n  degree: '',\n  subject: '',\n  year: '',\n};\n\ninterface Prop {\n  educationList: Array<Studies>;\n  deleteEducation: (id: string) => void;\n  updateEducation: (update: Studies) => void;\n}\n\nexport default Education;\n","import React, { useState } from 'react';\nimport { Studies } from './types';\nimport Education from './Education';\nimport EducationForm from './EducationForm';\n\nfunction EducationList() {\n  const [visibility, setVisibility] = useState(false);\n  const [educationList, setEducationList] = useState<Array<Studies>>([]);\n\n  const handleVisibility = () => {\n    setVisibility(true);\n  };\n\n  const handleSubmit = (input: Studies) => {\n    setEducationList([...educationList, input]);\n    setVisibility(false);\n  };\n  const handleUpdate = (update: Studies) => {\n    const updatedEducation = educationList.map((education) =>\n      update.id === education.id ? update : education\n    );\n\n    setEducationList(updatedEducation);\n  };\n  const handleDelete = (id: string) => {\n    setEducationList(educationList.filter((x) => x.id !== id));\n  };\n  return (\n    <div>\n      <div className=\"title-button\">\n        <h2>Education</h2>\n        <button onClick={handleVisibility}>+ Add</button>\n      </div>\n      {visibility ? (\n        <EducationForm onSubmit={(input) => handleSubmit(input)} />\n      ) : null}\n      <Education\n        educationList={educationList}\n        deleteEducation={(id) => handleDelete(id)}\n        updateEducation={(update) => handleUpdate(update)}\n      />\n    </div>\n  );\n}\n\nexport default EducationList;\n","import React, { FC, useState } from 'react';\nimport { JobsList } from './types';\nimport { v4 as uuid } from 'uuid';\n\nconst ExperienceForm: FC<Prop> = (props) => {\n  const [input, setInput] = useState<JobsList>(\n    props.edit\n      ? props.edit\n      : {\n          id: uuid(),\n          position: '',\n          company: '',\n          city: '',\n          start: '',\n          end: '',\n        }\n  );\n\n  const handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void = (\n    e\n  ) => {\n    const newValue = { ...input, [e.target.name]: e.target.value };\n    setInput(newValue);\n  };\n\n  const handleSubmit: (event: React.FormEvent<HTMLFormElement>) => void = (\n    e\n  ) => {\n    e.preventDefault();\n    props.onSubmit(input);\n  };\n\n  return (\n    <div className=\"form-container\">\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"position\">Position</label>\n        <input\n          type=\"text\"\n          name=\"position\"\n          value={input.position}\n          onChange={handleChange}\n        />\n\n        <label htmlFor=\"Company\">Company</label>\n        <input\n          type=\"text\"\n          name=\"company\"\n          value={input.company}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"city\">City</label>\n        <input\n          type=\"text\"\n          name=\"city\"\n          value={input.city}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"from\">From</label>\n        <input\n          type=\"date\"\n          name=\"start\"\n          value={input.start}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"to\">To</label>\n        <input\n          type=\"date\"\n          name=\"end\"\n          value={input.end}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">{props.edit ? 'Update' : 'Submit'}</button>\n      </form>\n    </div>\n  );\n};\n\ninterface Prop {\n  onSubmit: (input: JobsList) => void;\n  edit?: JobsList;\n}\n\nexport default ExperienceForm;\n","import React, { FC, useState } from 'react';\nimport { JobsList } from './types';\nimport ExperienceForm from './ExperienceForm';\nimport { MdModeEdit, MdDelete } from 'react-icons/md';\n\nconst Experience: FC<Prop> = (props) => {\n  const [edit, setEdit] = useState<JobsList>(initialState);\n\n  const handleUpdate = (input: JobsList) => {\n    props.updateExperience(input);\n    setEdit(initialState);\n  };\n\n  const handleDelete = (id: string) => {\n    props.deleteExperience(id);\n  };\n\n  const handleEdit = (job: JobsList) => {\n    const currentValue = {\n      id: job.id,\n      position: job.position,\n      company: job.company,\n      city: job.city,\n      start: job.start,\n      end: job.end,\n    };\n\n    setEdit(currentValue);\n  };\n\n  if (edit.id) {\n    return <ExperienceForm edit={edit} onSubmit={handleUpdate} />;\n  }\n\n  return (\n    <div>\n      {props.expList.map((job) => {\n        return (\n          <div key={job.id} className=\"experience-container\">\n            <div className=\"date\">\n              <h3>{job.start}</h3>\n              <h3>{job.end}</h3>\n            </div>\n            <div className=\"description\">\n              <h3>{job.position}</h3>\n              <h5>{job.company}</h5>\n              <h5>{job.city}</h5>\n            </div>\n            <div className=\"buttons\">\n              <button id=\"button\" onClick={() => handleDelete(job.id)}>\n                <MdDelete />\n              </button>\n              <button id=\"button\" onClick={() => handleEdit(job)}>\n                <MdModeEdit />\n              </button>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst initialState = {\n  id: '',\n  position: '',\n  company: '',\n  city: '',\n  start: '',\n  end: '',\n};\n\ninterface Prop {\n  expList: JobsList[];\n  deleteExperience: (id: string) => void;\n  updateExperience: (value: JobsList) => void;\n}\n\nexport default Experience;\n","import React, { useState } from 'react';\nimport { JobsList } from './types';\nimport Experience from './Experience';\nimport ExperienceForm from './ExperienceForm';\n\nfunction ExperienceList() {\n  const [visibility, setVisibility] = useState(false);\n  const [expList, setExpList] = useState<JobsList[]>([]);\n\n  const handleSubmit = (exp: JobsList) => {\n    setExpList([...expList, exp]);\n    setVisibility(false);\n  };\n\n  const deleteExperience = (id: string) => {\n    setExpList(expList.filter((x) => x.id !== id));\n  };\n\n  const handleUpdate = (update: JobsList) => {\n    const updatedValue = expList.map((job) =>\n      update.id === job.id ? update : job\n    );\n\n    setExpList(updatedValue);\n  };\n\n  return (\n    <div className=\"experience-list-container\">\n      <div className=\"title-button\">\n        <h2>Work Experience</h2>\n        <button onClick={() => setVisibility(true)}>+ Add</button>\n      </div>\n      {visibility ? (\n        <ExperienceForm onSubmit={(exp) => handleSubmit(exp)} />\n      ) : null}\n      <Experience\n        expList={expList}\n        deleteExperience={(id) => deleteExperience(id)}\n        updateExperience={(update) => handleUpdate(update)}\n      />\n    </div>\n  );\n}\n\nexport default ExperienceList;\n","import React, { FC, useState } from 'react';\nimport { MdModeEdit } from 'react-icons/md';\n\nconst PersonalData: FC = () => {\n  const [info, setInfo] = useState<Info>({\n    name: '',\n    surname: '',\n    email: '',\n    phone: '',\n  });\n\n  const [editMode, setEditMode] = useState(true);\n\n  const handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void = (\n    e\n  ) => {\n    const newValue = { ...info, [e.target.name]: e.target.value };\n    setInfo(newValue);\n  };\n\n  const handleSubmit: (event: React.FormEvent<HTMLFormElement>) => void = (\n    e\n  ) => {\n    e.preventDefault();\n    setInfo(info);\n    setEditMode(false);\n  };\n\n  const switchToEdit: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void = () => {\n    setEditMode(true);\n  };\n\n  if (!editMode) {\n    return (\n      <div className=\"header-conatainer\">\n        <div className=\"name-container\">\n          <h1>{info.name}</h1>\n          <h1>{info.surname}</h1>\n        </div>\n        <div className=\"email-container\">\n          <h4>{info.email}</h4>\n          <h4>{info.phone}</h4>\n          <button className=\"button-edit\" onClick={switchToEdit}>\n            <MdModeEdit />\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h2>Personal Information</h2>\n      <div className=\"form-container\">\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            value={info.name}\n            onChange={handleChange}\n            name=\"name\"\n          />\n          <label htmlFor=\"surname\">Last Name</label>\n          <input\n            type=\"text\"\n            value={info.surname}\n            onChange={handleChange}\n            name=\"surname\"\n          />\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"text\"\n            value={info.email}\n            onChange={handleChange}\n            name=\"email\"\n          />\n          <label htmlFor=\"phone\">Phone</label>\n          <input\n            type=\"text\"\n            value={info.phone}\n            onChange={handleChange}\n            name=\"phone\"\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ninterface Info {\n  name: string;\n  surname: string;\n  email: string;\n  phone: string;\n}\n\nexport default PersonalData;\n","import React, { FC } from 'react';\nimport EducationList from './EducationList';\nimport ExperienceList from './ExperienceList';\nimport PersonalData from './PersonalData';\n\nconst ResumeContainer: FC = () => {\n  return (\n    <div>\n      <h1 className=\"title\">Resume Builder</h1>\n      <PersonalData />\n      <ExperienceList />\n      <EducationList />\n    </div>\n  );\n};\n\nexport default ResumeContainer;\n","import React from 'react';\nimport './App.scss';\nimport ResumeContainer from './components/ResumeContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ResumeContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}